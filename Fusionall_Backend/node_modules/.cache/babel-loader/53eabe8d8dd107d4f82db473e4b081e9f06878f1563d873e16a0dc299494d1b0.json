{"ast":null,"code":"var _jsxFileName = \"D:\\\\fusionall\\\\src\\\\components\\\\FriendsList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { auth } from './firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FriendsList({\n  selectedFriends = [],\n  setSelectedFriends\n}) {\n  _s();\n  const [friends, setFriends] = useState([]);\n  useEffect(() => {\n    const fetchFriends = async () => {\n      const currentUser = auth.currentUser;\n      if (currentUser) {\n        const res = await fetch(`http://localhost:5000/api/friends/${currentUser.uid}`);\n        if (res.ok) {\n          const friendUids = await res.json();\n          // Fetch friend details\n          const friendDetails = await Promise.all(friendUids.map(async uid => {\n            const userRes = await fetch(`http://localhost:5000/api/auth/${uid}`);\n            if (userRes.ok) return await userRes.json();\n            return {\n              uid,\n              username: 'Unknown'\n            };\n          }));\n          setFriends(friendDetails);\n        }\n      }\n    };\n    fetchFriends();\n  }, []);\n  const toggleFriendSelection = friendUid => {\n    if (!setSelectedFriends) return;\n    if (selectedFriends.includes(friendUid)) {\n      setSelectedFriends(selectedFriends.filter(uid => uid !== friendUid));\n    } else {\n      setSelectedFriends([...selectedFriends, friendUid]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"friends-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Select Friends for Group\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), friends.length > 0 ? friends.map(friend => /*#__PURE__*/_jsxDEV(FriendItem, {\n      friend: friend,\n      isSelected: selectedFriends.includes(friend.uid),\n      toggleFriendSelection: toggleFriendSelection\n    }, friend.uid, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No friends yet. Add some!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(FriendsList, \"QwbMuLO2kqwKmE9hi2K1MX3vzvc=\");\n_c = FriendsList;\nfunction FriendItem({\n  friend,\n  isSelected,\n  toggleFriendSelection\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `friend-item ${isSelected ? 'selected' : ''}`,\n    onClick: () => toggleFriendSelection(friend.uid),\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: friend.username || 'Loading...'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_c2 = FriendItem;\nexport default FriendsList;\nvar _c, _c2;\n$RefreshReg$(_c, \"FriendsList\");\n$RefreshReg$(_c2, \"FriendItem\");","map":{"version":3,"names":["React","useEffect","useState","auth","jsxDEV","_jsxDEV","FriendsList","selectedFriends","setSelectedFriends","_s","friends","setFriends","fetchFriends","currentUser","res","fetch","uid","ok","friendUids","json","friendDetails","Promise","all","map","userRes","username","toggleFriendSelection","friendUid","includes","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","friend","FriendItem","isSelected","_c","onClick","_c2","$RefreshReg$"],"sources":["D:/fusionall/src/components/FriendsList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { auth } from './firebase';\r\n\r\nfunction FriendsList({ selectedFriends = [], setSelectedFriends }) {\r\n    const [friends, setFriends] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchFriends = async () => {\r\n            const currentUser = auth.currentUser;\r\n            if (currentUser) {\r\n                const res = await fetch(`http://localhost:5000/api/friends/${currentUser.uid}`);\r\n                if (res.ok) {\r\n                    const friendUids = await res.json();\r\n                    // Fetch friend details\r\n                    const friendDetails = await Promise.all(\r\n                        friendUids.map(async (uid) => {\r\n                            const userRes = await fetch(`http://localhost:5000/api/auth/${uid}`);\r\n                            if (userRes.ok) return await userRes.json();\r\n                            return { uid, username: 'Unknown' };\r\n                        })\r\n                    );\r\n                    setFriends(friendDetails);\r\n                }\r\n            }\r\n        };\r\n        fetchFriends();\r\n    }, []);\r\n\r\n    const toggleFriendSelection = (friendUid) => {\r\n        if (!setSelectedFriends) return;\r\n        if (selectedFriends.includes(friendUid)) {\r\n            setSelectedFriends(selectedFriends.filter((uid) => uid !== friendUid));\r\n        } else {\r\n            setSelectedFriends([...selectedFriends, friendUid]);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"friends-list\">\r\n            <h3>Select Friends for Group</h3>\r\n            {friends.length > 0 ? (\r\n                friends.map((friend) => (\r\n                    <FriendItem\r\n                        key={friend.uid}\r\n                        friend={friend}\r\n                        isSelected={selectedFriends.includes(friend.uid)}\r\n                        toggleFriendSelection={toggleFriendSelection}\r\n                    />\r\n                ))\r\n            ) : (\r\n                <p>No friends yet. Add some!</p>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction FriendItem({ friend, isSelected, toggleFriendSelection }) {\r\n    return (\r\n        <div\r\n            className={`friend-item ${isSelected ? 'selected' : ''}`}\r\n            onClick={() => toggleFriendSelection(friend.uid)}\r\n        >\r\n            <p>{friend.username || 'Loading...'}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FriendsList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}