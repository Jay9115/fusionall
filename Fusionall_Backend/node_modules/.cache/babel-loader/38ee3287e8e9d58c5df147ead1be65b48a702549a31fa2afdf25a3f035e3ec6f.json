{"ast":null,"code":"var _jsxFileName = \"D:\\\\fusionall\\\\src\\\\components\\\\chat.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport './chat.css';\nimport { collection, addDoc, orderBy, query, onSnapshot, serverTimestamp, doc, getDoc, deleteDoc } from 'firebase/firestore';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { auth, firestore } from './firebase';\nimport AuthButtons from \"./AuthButtons\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Chat() {\n  _s();\n  const [user] = useAuthState(auth);\n  const [selectedFriend, setSelectedFriend] = useState(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      children: user ? selectedFriend ? /*#__PURE__*/_jsxDEV(PrivateChat, {\n        friend: selectedFriend,\n        setSelectedFriend: setSelectedFriend\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(FriendsList, {\n        setSelectedFriend: setSelectedFriend\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(AuthButtons, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"r6IOPMAJDKpBOH52apaIq7LIdWc=\", false, function () {\n  return [useAuthState];\n});\n_c = Chat;\nfunction FriendsList({\n  setSelectedFriend\n}) {\n  _s2();\n  const [friends, setFriends] = useState([]);\n  useEffect(() => {\n    const fetchFriends = async () => {\n      const currentUser = auth.currentUser;\n      if (currentUser) {\n        const userDocRef = doc(firestore, 'users', currentUser.uid);\n        const userSnapshot = await getDoc(userDocRef);\n        if (userSnapshot.exists()) {\n          const userData = userSnapshot.data();\n          if (userData.friends) {\n            setFriends(userData.friends);\n          }\n        }\n      }\n    };\n    fetchFriends();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"friends-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Your Friends\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), friends.length > 0 ? friends.map(friendUid => /*#__PURE__*/_jsxDEV(FriendItem, {\n      friendUid: friendUid,\n      setSelectedFriend: setSelectedFriend\n    }, friendUid, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No friends yet. Add some!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s2(FriendsList, \"QwbMuLO2kqwKmE9hi2K1MX3vzvc=\");\n_c2 = FriendsList;\nfunction FriendItem({\n  friendUid,\n  setSelectedFriend\n}) {\n  _s3();\n  const [friendData, setFriendData] = useState(null);\n  useEffect(() => {\n    const fetchFriendData = async () => {\n      const friendDocRef = doc(firestore, 'users', friendUid);\n      const friendSnapshot = await getDoc(friendDocRef);\n      setFriendData(friendSnapshot.data());\n    };\n    fetchFriendData();\n  }, [friendUid]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"friend-item\",\n    onClick: () => setSelectedFriend(friendData),\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: (friendData === null || friendData === void 0 ? void 0 : friendData.photoURL) || 'https://api.adorable.io/avatars/23/abott@adorable.png',\n      alt: `${friendData === null || friendData === void 0 ? void 0 : friendData.username}'s avatar`,\n      className: \"friend-avatar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: (friendData === null || friendData === void 0 ? void 0 : friendData.username) || 'Loading...'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s3(FriendItem, \"E4XiZNKUHzH6x9uX3P099lBVNTU=\");\n_c3 = FriendItem;\nfunction PrivateChat({\n  friend,\n  setSelectedFriend\n}) {\n  _s4();\n  const currentUser = auth.currentUser;\n  const dummy = useRef();\n  const [formValue, setFormValue] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [selectMode, setSelectMode] = useState(false);\n  const [selectedMessages, setSelectedMessages] = useState([]);\n  const chatId = [currentUser.uid, friend.uid].sort().join('_');\n  useEffect(() => {\n    const messagesRef = collection(firestore, 'chats', chatId, 'messages');\n    const q = query(messagesRef, orderBy('timestamp'));\n    const unsubscribe = onSnapshot(q, querySnapshot => {\n      const messagesData = [];\n      querySnapshot.forEach(doc => {\n        messagesData.push({\n          id: doc.id,\n          ...doc.data()\n        });\n      });\n      setMessages(messagesData);\n      dummy.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    });\n    return () => unsubscribe();\n  }, [chatId]);\n  const sendMessage = async e => {\n    e.preventDefault();\n    const {\n      uid,\n      photoURL\n    } = currentUser;\n    await addDoc(collection(firestore, 'chats', chatId, 'messages'), {\n      text: formValue,\n      timestamp: serverTimestamp(),\n      sender: uid,\n      photoURL\n    });\n    setFormValue('');\n    dummy.current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const toggleSelectMode = () => {\n    setSelectMode(!selectMode);\n    setSelectedMessages([]);\n  };\n  const toggleSelectMessage = id => {\n    setSelectedMessages(prev => prev.includes(id) ? prev.filter(msgId => msgId !== id) : [...prev, id]);\n  };\n  const handleDeleteSelected = async () => {\n    for (const messageId of selectedMessages) {\n      await deleteDoc(doc(firestore, 'chats', chatId, 'messages', messageId));\n    }\n    setSelectedMessages([]);\n    setSelectMode(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Chat with \", friend.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"back-buttons\",\n          onClick: () => setSelectedFriend(null),\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"back-buttons\",\n          onClick: toggleSelectMode,\n          children: \"\\u22EE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), selectMode && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleDeleteSelected,\n            disabled: selectedMessages.length === 0,\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleSelectMode,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [messages && messages.map(msg => /*#__PURE__*/_jsxDEV(ChatMessage, {\n        message: msg,\n        chatId: chatId,\n        selectMode: selectMode,\n        selected: selectedMessages.includes(msg.id),\n        onSelect: () => toggleSelectMessage(msg.id)\n      }, msg.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"span\", {\n        ref: dummy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: formValue,\n        onChange: e => setFormValue(e.target.value),\n        placeholder: \"Type a message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !formValue,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s4(PrivateChat, \"jZENLMIqqhBwX3bZaGilUzAcFD0=\");\n_c4 = PrivateChat;\nfunction ChatMessage({\n  message,\n  selectMode,\n  selected,\n  onSelect\n}) {\n  const {\n    text,\n    sender,\n    photoURL\n  } = message;\n  const messageClass = sender === auth.currentUser.uid ? 'sent' : 'received';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `message ${messageClass} ${selected ? 'selected' : ''}`,\n    onClick: selectMode ? onSelect : null,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: photoURL || 'https://api.adorable.io/avatars/23/abott@adorable.png',\n      alt: \"Avatar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), selectMode && /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: selected,\n      readOnly: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 5\n  }, this);\n}\n_c5 = ChatMessage;\nexport default Chat;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Chat\");\n$RefreshReg$(_c2, \"FriendsList\");\n$RefreshReg$(_c3, \"FriendItem\");\n$RefreshReg$(_c4, \"PrivateChat\");\n$RefreshReg$(_c5, \"ChatMessage\");","map":{"version":3,"names":["React","useRef","useState","useEffect","collection","addDoc","orderBy","query","onSnapshot","serverTimestamp","doc","getDoc","deleteDoc","useAuthState","auth","firestore","AuthButtons","jsxDEV","_jsxDEV","Fragment","_Fragment","Chat","_s","user","selectedFriend","setSelectedFriend","className","children","PrivateChat","friend","fileName","_jsxFileName","lineNumber","columnNumber","FriendsList","_c","_s2","friends","setFriends","fetchFriends","currentUser","userDocRef","uid","userSnapshot","exists","userData","data","length","map","friendUid","FriendItem","_c2","_s3","friendData","setFriendData","fetchFriendData","friendDocRef","friendSnapshot","onClick","src","photoURL","alt","username","_c3","_s4","dummy","formValue","setFormValue","messages","setMessages","selectMode","setSelectMode","selectedMessages","setSelectedMessages","chatId","sort","join","messagesRef","q","unsubscribe","querySnapshot","messagesData","forEach","push","id","current","scrollIntoView","behavior","sendMessage","e","preventDefault","text","timestamp","sender","toggleSelectMode","toggleSelectMessage","prev","includes","filter","msgId","handleDeleteSelected","messageId","disabled","msg","ChatMessage","message","selected","onSelect","ref","onSubmit","value","onChange","target","placeholder","type","_c4","messageClass","checked","readOnly","_c5","$RefreshReg$"],"sources":["D:/fusionall/src/components/chat.jsx"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\nimport './chat.css';\r\nimport { collection, addDoc, orderBy, query, onSnapshot, serverTimestamp, doc, getDoc, deleteDoc } from 'firebase/firestore';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport { auth, firestore } from './firebase';\r\nimport AuthButtons from \"./AuthButtons\";\r\n\r\nfunction Chat() {\r\n  const [user] = useAuthState(auth);\r\n  const [selectedFriend, setSelectedFriend] = useState(null);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <section>\r\n        {user ? (\r\n          selectedFriend ? (\r\n            <PrivateChat friend={selectedFriend} setSelectedFriend={setSelectedFriend} />\r\n          ) : (\r\n            <FriendsList setSelectedFriend={setSelectedFriend} />\r\n          )\r\n        ) : (\r\n          <AuthButtons />\r\n        )}\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction FriendsList({ setSelectedFriend }) {\r\n  const [friends, setFriends] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchFriends = async () => {\r\n      const currentUser = auth.currentUser;\r\n      if (currentUser) {\r\n        const userDocRef = doc(firestore, 'users', currentUser.uid);\r\n        const userSnapshot = await getDoc(userDocRef);\r\n\r\n        if (userSnapshot.exists()) {\r\n          const userData = userSnapshot.data();\r\n          if (userData.friends) {\r\n            setFriends(userData.friends);\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchFriends();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"friends-list\">\r\n      <h3>Your Friends</h3>\r\n      {friends.length > 0 ? (\r\n        friends.map((friendUid) => (\r\n          <FriendItem key={friendUid} friendUid={friendUid} setSelectedFriend={setSelectedFriend} />\r\n        ))\r\n      ) : (\r\n        <p>No friends yet. Add some!</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction FriendItem({ friendUid, setSelectedFriend }) {\r\n  const [friendData, setFriendData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchFriendData = async () => {\r\n      const friendDocRef = doc(firestore, 'users', friendUid);\r\n      const friendSnapshot = await getDoc(friendDocRef);\r\n      setFriendData(friendSnapshot.data());\r\n    };\r\n\r\n    fetchFriendData();\r\n  }, [friendUid]);\r\n\r\n  return (\r\n    <div className=\"friend-item\" onClick={() => setSelectedFriend(friendData)}>\r\n      <img\r\n        src={friendData?.photoURL || 'https://api.adorable.io/avatars/23/abott@adorable.png'}\r\n        alt={`${friendData?.username}'s avatar`}\r\n        className=\"friend-avatar\"\r\n      />\r\n      <p>{friendData?.username || 'Loading...'}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction PrivateChat({ friend, setSelectedFriend }) {\r\n  const currentUser = auth.currentUser;\r\n  const dummy = useRef();\r\n  const [formValue, setFormValue] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const [selectMode, setSelectMode] = useState(false);\r\n  const [selectedMessages, setSelectedMessages] = useState([]);\r\n  const chatId = [currentUser.uid, friend.uid].sort().join('_');\r\n\r\n  useEffect(() => {\r\n    const messagesRef = collection(firestore, 'chats', chatId, 'messages');\r\n    const q = query(messagesRef, orderBy('timestamp'));\r\n\r\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\r\n      const messagesData = [];\r\n      querySnapshot.forEach((doc) => {\r\n        messagesData.push({ id: doc.id, ...doc.data() });\r\n      });\r\n      setMessages(messagesData);\r\n      dummy.current.scrollIntoView({ behavior: 'smooth' });\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, [chatId]);\r\n\r\n  const sendMessage = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const { uid, photoURL } = currentUser;\r\n\r\n    await addDoc(collection(firestore, 'chats', chatId, 'messages'), {\r\n      text: formValue,\r\n      timestamp: serverTimestamp(),\r\n      sender: uid,\r\n      photoURL,\r\n    });\r\n\r\n    setFormValue('');\r\n    dummy.current.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  const toggleSelectMode = () => {\r\n    setSelectMode(!selectMode);\r\n    setSelectedMessages([]);\r\n  };\r\n\r\n  const toggleSelectMessage = (id) => {\r\n    setSelectedMessages((prev) =>\r\n      prev.includes(id) ? prev.filter((msgId) => msgId !== id) : [...prev, id]\r\n    );\r\n  };\r\n\r\n  const handleDeleteSelected = async () => {\r\n    for (const messageId of selectedMessages) {\r\n      await deleteDoc(doc(firestore, 'chats', chatId, 'messages', messageId));\r\n    }\r\n    setSelectedMessages([]);\r\n    setSelectMode(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <header>\r\n        <h3>Chat with {friend.username}</h3>\r\n        \r\n        <div className=\"options\">\r\n        <button className=\"back-buttons\" onClick={() => setSelectedFriend(null)}>Back</button>\r\n          <button className=\"back-buttons\" onClick={toggleSelectMode}>⋮</button>\r\n          {selectMode && (\r\n            <div className=\"dropdown\">\r\n              <button onClick={handleDeleteSelected} disabled={selectedMessages.length === 0}>\r\n                Delete \r\n              </button>\r\n              <button onClick={toggleSelectMode}>Cancel</button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </header>\r\n      \r\n      <main>\r\n       \r\n      \r\n        \r\n        {messages && messages.map((msg) => (\r\n          <ChatMessage\r\n            key={msg.id}\r\n            message={msg}\r\n            chatId={chatId}\r\n            selectMode={selectMode}\r\n            selected={selectedMessages.includes(msg.id)}\r\n            onSelect={() => toggleSelectMessage(msg.id)}\r\n          />\r\n        ))}\r\n        \r\n        <span ref={dummy}></span>\r\n      </main>\r\n\r\n      <form onSubmit={sendMessage}>\r\n        <input\r\n          value={formValue}\r\n          onChange={(e) => setFormValue(e.target.value)}\r\n          placeholder=\"Type a message\"\r\n        />\r\n        <button type=\"submit\" disabled={!formValue}>\r\n          Send\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction ChatMessage({ message, selectMode, selected, onSelect }) {\r\n  const { text, sender, photoURL } = message;\r\n  const messageClass = sender === auth.currentUser.uid ? 'sent' : 'received';\r\n\r\n  return (\r\n    <div className={`message ${messageClass} ${selected ? 'selected' : ''}`} onClick={selectMode ? onSelect : null}>\r\n      <img src={photoURL || 'https://api.adorable.io/avatars/23/abott@adorable.png'} alt=\"Avatar\" />\r\n      <p>{text}</p>\r\n      {selectMode && (\r\n        <input type=\"checkbox\" checked={selected} readOnly />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}