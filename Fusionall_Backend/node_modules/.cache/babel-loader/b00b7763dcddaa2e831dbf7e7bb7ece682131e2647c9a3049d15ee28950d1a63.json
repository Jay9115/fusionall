{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jay\\\\Desktop\\\\JAY\\\\ss\\\\fusionall\\\\src\\\\components\\\\PrivateChat.jsx\",\n  _s = $RefreshSig$();\n// PrivateChat.jsx\n\nimport React, { useRef, useState, useEffect } from 'react';\nimport { collection, addDoc, orderBy, query, serverTimestamp, onSnapshot } from 'firebase/firestore';\nimport { auth, firestore } from './firebase';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction PrivateChat({\n  friend\n}) {\n  _s();\n  const currentUser = auth.currentUser;\n  const dummy = useRef();\n  const [formValue, setFormValue] = useState('');\n  const [messages, setMessages] = useState([]);\n\n  // Create a consistent chatId using both users' UIDs\n  const chatId = [currentUser.uid, friend.uid].sort().join('_'); // Sorting ensures both user UIDs form the same chatId\n\n  // Use Firestore's onSnapshot to listen for real-time updates\n  useEffect(() => {\n    const messagesRef = collection(firestore, 'chats', chatId, 'messages');\n    const q = query(messagesRef, orderBy('timestamp'));\n    const unsubscribe = onSnapshot(q, querySnapshot => {\n      const messagesData = [];\n      querySnapshot.forEach(doc => {\n        messagesData.push(doc.data());\n      });\n      setMessages(messagesData);\n      dummy.current.scrollIntoView({\n        behavior: 'smooth'\n      }); // Scroll to bottom when new message arrives\n    });\n    return () => unsubscribe(); // Clean up the listener when the component unmounts\n  }, [chatId]);\n  const sendMessage = async e => {\n    e.preventDefault();\n    const {\n      uid,\n      photoURL\n    } = currentUser;\n\n    // Add the new message to Firestore\n    await addDoc(collection(firestore, 'chats', chatId, 'messages'), {\n      text: formValue,\n      timestamp: serverTimestamp(),\n      sender: uid,\n      photoURL\n    });\n    setFormValue(''); // Clear the message input field\n    dummy.current.scrollIntoView({\n      behavior: 'smooth'\n    }); // Scroll to the bottom after sending a message\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Chat with \", friend.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), messages && messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n        message: msg\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 57\n      }, this)), /*#__PURE__*/_jsxDEV(\"span\", {\n        ref: dummy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: formValue,\n        onChange: e => setFormValue(e.target.value),\n        placeholder: \"Type a message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !formValue,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n// ChatMessage component for rendering individual messages\n_s(PrivateChat, \"+gZE8lhWWaU1iHUOKBBZEA1lf9s=\");\n_c = PrivateChat;\nfunction ChatMessage({\n  message\n}) {\n  const {\n    text,\n    sender,\n    photoURL\n  } = message;\n  const messageClass = sender === auth.currentUser.uid ? 'sent' : 'received';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `message ${messageClass}`,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: photoURL || 'https://api.adorable.io/avatars/23/abott@adorable.png',\n      alt: \"Avatar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n_c2 = ChatMessage;\nexport default PrivateChat;\nvar _c, _c2;\n$RefreshReg$(_c, \"PrivateChat\");\n$RefreshReg$(_c2, \"ChatMessage\");","map":{"version":3,"names":["React","useRef","useState","useEffect","collection","addDoc","orderBy","query","serverTimestamp","onSnapshot","auth","firestore","jsxDEV","_jsxDEV","Fragment","_Fragment","PrivateChat","friend","_s","currentUser","dummy","formValue","setFormValue","messages","setMessages","chatId","uid","sort","join","messagesRef","q","unsubscribe","querySnapshot","messagesData","forEach","doc","push","data","current","scrollIntoView","behavior","sendMessage","e","preventDefault","photoURL","text","timestamp","sender","children","username","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","idx","ChatMessage","message","ref","onSubmit","value","onChange","target","placeholder","type","disabled","_c","messageClass","className","src","alt","_c2","$RefreshReg$"],"sources":["C:/Users/Jay/Desktop/JAY/ss/fusionall/src/components/PrivateChat.jsx"],"sourcesContent":["// PrivateChat.jsx\r\n\r\nimport React, { useRef, useState, useEffect } from 'react';\r\nimport { collection, addDoc, orderBy, query, serverTimestamp, onSnapshot } from 'firebase/firestore';\r\nimport { auth, firestore } from './firebase';\r\n\r\nfunction PrivateChat({ friend }) {\r\n    const currentUser = auth.currentUser;\r\n    const dummy = useRef();\r\n    const [formValue, setFormValue] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    // Create a consistent chatId using both users' UIDs\r\n    const chatId = [currentUser.uid, friend.uid].sort().join('_'); // Sorting ensures both user UIDs form the same chatId\r\n\r\n    // Use Firestore's onSnapshot to listen for real-time updates\r\n    useEffect(() => {\r\n        const messagesRef = collection(firestore, 'chats', chatId, 'messages');\r\n        const q = query(messagesRef, orderBy('timestamp'));\r\n\r\n        const unsubscribe = onSnapshot(q, (querySnapshot) => {\r\n            const messagesData = [];\r\n            querySnapshot.forEach((doc) => {\r\n                messagesData.push(doc.data());\r\n            });\r\n            setMessages(messagesData);\r\n            dummy.current.scrollIntoView({ behavior: 'smooth' });  // Scroll to bottom when new message arrives\r\n        });\r\n\r\n        return () => unsubscribe(); // Clean up the listener when the component unmounts\r\n    }, [chatId]);\r\n\r\n    const sendMessage = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const { uid, photoURL } = currentUser;\r\n\r\n        // Add the new message to Firestore\r\n        await addDoc(collection(firestore, 'chats', chatId, 'messages'), {\r\n            text: formValue,\r\n            timestamp: serverTimestamp(),\r\n            sender: uid,\r\n            photoURL,\r\n        });\r\n\r\n        setFormValue(''); // Clear the message input field\r\n        dummy.current.scrollIntoView({ behavior: 'smooth' }); // Scroll to the bottom after sending a message\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <main>\r\n                <h3>Chat with {friend.username}</h3>\r\n                {messages && messages.map((msg, idx) => <ChatMessage key={idx} message={msg} />)}\r\n                <span ref={dummy}></span>\r\n            </main>\r\n\r\n            <form onSubmit={sendMessage}>\r\n                <input\r\n                    value={formValue}\r\n                    onChange={(e) => setFormValue(e.target.value)}\r\n                    placeholder=\"Type a message\"\r\n                />\r\n                <button type=\"submit\" disabled={!formValue}>\r\n                    Send\r\n                </button>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\n// ChatMessage component for rendering individual messages\r\nfunction ChatMessage({ message }) {\r\n    const { text, sender, photoURL } = message;\r\n    const messageClass = sender === auth.currentUser.uid ? 'sent' : 'received';\r\n\r\n    return (\r\n        <div className={`message ${messageClass}`}>\r\n            <img src={photoURL || 'https://api.adorable.io/avatars/23/abott@adorable.png'} alt=\"Avatar\" />\r\n            <p>{text}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PrivateChat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}