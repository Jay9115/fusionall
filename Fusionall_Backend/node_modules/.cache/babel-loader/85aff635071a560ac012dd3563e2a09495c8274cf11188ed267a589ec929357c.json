{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jay\\\\Desktop\\\\JAY\\\\ss\\\\fusionall\\\\src\\\\components\\\\FriendsList.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { doc, getDoc } from 'firebase/firestore';\nimport { auth, firestore } from './firebase'; // Import your firebase setup\nimport css from './FriendsList.';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FriendsList({\n  selectedFriends,\n  setSelectedFriends\n}) {\n  _s();\n  const [friends, setFriends] = useState([]);\n  useEffect(() => {\n    const fetchFriends = async () => {\n      const currentUser = auth.currentUser;\n      if (currentUser) {\n        const userDocRef = doc(firestore, 'users', currentUser.uid);\n        const userSnapshot = await getDoc(userDocRef);\n        if (userSnapshot.exists()) {\n          const userData = userSnapshot.data();\n          if (userData.friends) {\n            setFriends(userData.friends);\n          }\n        }\n      }\n    };\n    fetchFriends();\n  }, []);\n  const toggleFriendSelection = friendUid => {\n    if (selectedFriends.includes(friendUid)) {\n      setSelectedFriends(selectedFriends.filter(uid => uid !== friendUid));\n    } else {\n      setSelectedFriends([...selectedFriends, friendUid]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"friends-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Select Friends for Group\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), friends.length > 0 ? friends.map(friendUid => /*#__PURE__*/_jsxDEV(FriendItem, {\n      friendUid: friendUid,\n      isSelected: selectedFriends.includes(friendUid),\n      toggleFriendSelection: toggleFriendSelection\n    }, friendUid, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No friends yet. Add some!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(FriendsList, \"QwbMuLO2kqwKmE9hi2K1MX3vzvc=\");\n_c = FriendsList;\nfunction FriendItem({\n  friendUid,\n  isSelected,\n  toggleFriendSelection\n}) {\n  _s2();\n  const [friendData, setFriendData] = useState(null);\n  useEffect(() => {\n    const fetchFriendData = async () => {\n      const friendDocRef = doc(firestore, 'users', friendUid);\n      const friendSnapshot = await getDoc(friendDocRef);\n      setFriendData(friendSnapshot.data());\n    };\n    fetchFriendData();\n  }, [friendUid]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `friend-item ${isSelected ? 'selected' : ''}`,\n    onClick: () => toggleFriendSelection(friendUid),\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: (friendData === null || friendData === void 0 ? void 0 : friendData.username) || 'Loading...'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n_s2(FriendItem, \"E4XiZNKUHzH6x9uX3P099lBVNTU=\");\n_c2 = FriendItem;\nexport default FriendsList;\nvar _c, _c2;\n$RefreshReg$(_c, \"FriendsList\");\n$RefreshReg$(_c2, \"FriendItem\");","map":{"version":3,"names":["React","useEffect","useState","doc","getDoc","auth","firestore","css","jsxDEV","_jsxDEV","FriendsList","selectedFriends","setSelectedFriends","_s","friends","setFriends","fetchFriends","currentUser","userDocRef","uid","userSnapshot","exists","userData","data","toggleFriendSelection","friendUid","includes","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","FriendItem","isSelected","_c","_s2","friendData","setFriendData","fetchFriendData","friendDocRef","friendSnapshot","onClick","username","_c2","$RefreshReg$"],"sources":["C:/Users/Jay/Desktop/JAY/ss/fusionall/src/components/FriendsList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { doc, getDoc } from 'firebase/firestore';\r\nimport { auth, firestore } from './firebase'; // Import your firebase setup\r\nimport css from './FriendsList.'\r\nfunction FriendsList({ selectedFriends, setSelectedFriends }) {\r\n    const [friends, setFriends] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchFriends = async () => {\r\n            const currentUser = auth.currentUser;\r\n            if (currentUser) {\r\n                const userDocRef = doc(firestore, 'users', currentUser.uid);\r\n                const userSnapshot = await getDoc(userDocRef);\r\n\r\n                if (userSnapshot.exists()) {\r\n                    const userData = userSnapshot.data();\r\n                    if (userData.friends) {\r\n                        setFriends(userData.friends);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        fetchFriends();\r\n    }, []);\r\n\r\n    const toggleFriendSelection = (friendUid) => {\r\n        if (selectedFriends.includes(friendUid)) {\r\n            setSelectedFriends(selectedFriends.filter((uid) => uid !== friendUid));\r\n        } else {\r\n            setSelectedFriends([...selectedFriends, friendUid]);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"friends-list\">\r\n            <h3>Select Friends for Group</h3>\r\n            {friends.length > 0 ? (\r\n                friends.map((friendUid) => (\r\n                    <FriendItem\r\n                        key={friendUid}\r\n                        friendUid={friendUid}\r\n                        isSelected={selectedFriends.includes(friendUid)}\r\n                        toggleFriendSelection={toggleFriendSelection}\r\n                    />\r\n                ))\r\n            ) : (\r\n                <p>No friends yet. Add some!</p>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction FriendItem({ friendUid, isSelected, toggleFriendSelection }) {\r\n    const [friendData, setFriendData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchFriendData = async () => {\r\n            const friendDocRef = doc(firestore, 'users', friendUid);\r\n            const friendSnapshot = await getDoc(friendDocRef);\r\n            setFriendData(friendSnapshot.data());\r\n        };\r\n\r\n        fetchFriendData();\r\n    }, [friendUid]);\r\n\r\n    return (\r\n        <div\r\n            className={`friend-item ${isSelected ? 'selected' : ''}`}\r\n            onClick={() => toggleFriendSelection(friendUid)}\r\n        >\r\n            <p>{friendData?.username || 'Loading...'}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FriendsList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}