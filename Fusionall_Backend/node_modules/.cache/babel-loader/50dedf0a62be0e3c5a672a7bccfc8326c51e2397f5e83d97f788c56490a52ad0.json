{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jay\\\\Desktop\\\\JAY\\\\ss\\\\fusionall\\\\src\\\\components\\\\Horizontalnav.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { collection, query, where, getDocs, doc, updateDoc, arrayUnion } from 'firebase/firestore';\nimport { firestore, auth } from './firebase'; // Ensure firebase config is properly imported\nimport FriendRequests from './FriendRequests';\nimport \"./Horizontalnav.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HorizontalNav = () => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState(''); // State for search term\n  const [searchResults, setSearchResults] = useState([]); // State for search results\n  const currentUser = auth.currentUser; // Get current logged-in user\n  const [showRequests, setShowRequests] = useState(false); // State to toggle friend requests\n\n  // Handle search input change\n  const handleSearchChange = async e => {\n    const searchValue = e.target.value;\n    setSearchTerm(searchValue);\n    if (searchValue) {\n      // Query Firestore to find users by username\n      const usersRef = collection(firestore, 'users');\n      const q = query(usersRef, where('username', '>=', searchValue), where('username', '<=', searchValue + '\\uf8ff'));\n      const querySnapshot = await getDocs(q);\n      const results = [];\n      querySnapshot.forEach(doc => {\n        if (doc.data().uid !== currentUser.uid) {\n          // Exclude the current user from results\n          results.push(doc.data());\n        }\n      });\n      setSearchResults(results);\n    } else {\n      setSearchResults([]); // Clear results when search is empty\n    }\n  };\n\n  // Handle sending a friend request\n  const sendFriendRequest = async friendUid => {\n    const userRef = doc(firestore, 'users', currentUser.uid);\n\n    // Add the friend's UID to the current user's \"friendRequestsSent\" array\n    await updateDoc(userRef, {\n      friendRequestsSent: arrayUnion(friendUid)\n    });\n\n    // You could also update the other user's \"friendRequestsReceived\" array similarly\n    const friendRef = doc(firestore, 'users', friendUid);\n    await updateDoc(friendRef, {\n      friendRequestsReceived: arrayUnion(currentUser.uid)\n    });\n    alert('Friend request sent!');\n  };\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"horizontal-nav\",\n    id: \"horizontal-nav\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"show-requests-container\",\n      children: /*#__PURE__*/_jsxDEV(FriendRequests, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"search\",\n        placeholder: \"Search...\",\n        value: searchTerm,\n        onChange: handleSearchChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), searchResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-results\",\n        children: searchResults.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-result-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => sendFriendRequest(user.uid),\n            children: \"Add Friend\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 33\n          }, this)]\n        }, user.uid, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"brand-name\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"FusionAll\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(HorizontalNav, \"V0qxgtn0ULSHAiJQ6dhZH9kKhRI=\");\n_c = HorizontalNav;\nexport default HorizontalNav;\nvar _c;\n$RefreshReg$(_c, \"HorizontalNav\");","map":{"version":3,"names":["React","useState","collection","query","where","getDocs","doc","updateDoc","arrayUnion","firestore","auth","FriendRequests","jsxDEV","_jsxDEV","HorizontalNav","_s","searchTerm","setSearchTerm","searchResults","setSearchResults","currentUser","showRequests","setShowRequests","handleSearchChange","e","searchValue","target","value","usersRef","q","querySnapshot","results","forEach","data","uid","push","sendFriendRequest","friendUid","userRef","friendRequestsSent","friendRef","friendRequestsReceived","alert","className","id","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","length","map","user","username","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Jay/Desktop/JAY/ss/fusionall/src/components/Horizontalnav.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { collection, query, where, getDocs, doc, updateDoc, arrayUnion } from 'firebase/firestore';\r\nimport { firestore, auth } from './firebase'; // Ensure firebase config is properly imported\r\nimport FriendRequests from './FriendRequests';\r\nimport \"./Horizontalnav.css\";\r\n\r\nconst HorizontalNav = () => {\r\n    const [searchTerm, setSearchTerm] = useState(''); // State for search term\r\n    const [searchResults, setSearchResults] = useState([]); // State for search results\r\n    const currentUser = auth.currentUser; // Get current logged-in user\r\n    const [showRequests, setShowRequests] = useState(false); // State to toggle friend requests\r\n\r\n    // Handle search input change\r\n    const handleSearchChange = async (e) => {\r\n        const searchValue = e.target.value;\r\n        setSearchTerm(searchValue);\r\n\r\n        if (searchValue) {\r\n            // Query Firestore to find users by username\r\n            const usersRef = collection(firestore, 'users');\r\n            const q = query(usersRef, where('username', '>=', searchValue), where('username', '<=', searchValue + '\\uf8ff'));\r\n            const querySnapshot = await getDocs(q);\r\n\r\n            const results = [];\r\n            querySnapshot.forEach((doc) => {\r\n                if (doc.data().uid !== currentUser.uid) { // Exclude the current user from results\r\n                    results.push(doc.data());\r\n                }\r\n            });\r\n\r\n            setSearchResults(results);\r\n        } else {\r\n            setSearchResults([]); // Clear results when search is empty\r\n        }\r\n    };\r\n\r\n    // Handle sending a friend request\r\n    const sendFriendRequest = async (friendUid) => {\r\n        const userRef = doc(firestore, 'users', currentUser.uid);\r\n\r\n        // Add the friend's UID to the current user's \"friendRequestsSent\" array\r\n        await updateDoc(userRef, {\r\n            friendRequestsSent: arrayUnion(friendUid)\r\n        });\r\n\r\n        // You could also update the other user's \"friendRequestsReceived\" array similarly\r\n        const friendRef = doc(firestore, 'users', friendUid);\r\n        await updateDoc(friendRef, {\r\n            friendRequestsReceived: arrayUnion(currentUser.uid)\r\n        });\r\n\r\n        alert('Friend request sent!');\r\n    };\r\n\r\n    return (\r\n        <nav className=\"horizontal-nav\" id=\"horizontal-nav\">\r\n            {/* Left side: Show Friend Requests */}\r\n            <div className=\"show-requests-container\">\r\n                {/* <button onClick={() => setShowRequests((prev) => !prev)}>\r\n                    {showRequests ? 'Hide Requests' : 'Show Friend Requests'}\r\n                </button>\r\n\r\n                {showRequests && <FriendRequests />} Show friend requests dropdown */}\r\n                <FriendRequests />\r\n            </div>\r\n\r\n            {/* Middle: Search Bar */}\r\n            <div className=\"search-container\">\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"search\"\r\n                    placeholder=\"Search...\"\r\n                    value={searchTerm}\r\n                    onChange={handleSearchChange}\r\n                />\r\n                {searchResults.length > 0 && (\r\n                    <div className=\"search-results\">\r\n                        {searchResults.map((user) => (\r\n                            <div key={user.uid} className=\"search-result-item\">\r\n                                <span>{user.username}</span>\r\n                                <button onClick={() => sendFriendRequest(user.uid)}>\r\n                                    Add Friend\r\n                                </button>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {/* Right side: Brand Logo/Name */}\r\n            <div className=\"brand-name\">\r\n                <h3><b>FusionAll</b></h3>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default HorizontalNav;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}