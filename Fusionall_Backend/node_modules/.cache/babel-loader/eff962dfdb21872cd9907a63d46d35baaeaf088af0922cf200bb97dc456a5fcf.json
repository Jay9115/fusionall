{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jay\\\\Desktop\\\\JAY\\\\ss\\\\fusionall\\\\src\\\\components\\\\group.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { collection, query, where, getDocs, addDoc, serverTimestamp } from 'firebase/firestore'; // Firebase v9 functions\nimport { firestore, auth } from './firebase'; // Your Firebase utilities\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Group() {\n  _s();\n  const [groups, setGroups] = useState([]);\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [showGroupModal, setShowGroupModal] = useState(false);\n\n  // Fetch the user's groups from Firestore\n  useEffect(() => {\n    const fetchGroups = async () => {\n      const currentUser = auth.currentUser;\n      const groupRef = collection(firestore, 'groups');\n      const groupQuery = query(groupRef, where('groupMembers', 'array-contains', currentUser.uid));\n      const groupSnapshot = await getDocs(groupQuery);\n      const userGroups = groupSnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setGroups(userGroups);\n    };\n    fetchGroups();\n  }, []);\n\n  // Function to handle group creation\n  const createGroup = async (groupName, selectedFriends) => {\n    const currentUser = auth.currentUser;\n    const groupData = {\n      groupName,\n      groupMembers: [...selectedFriends, currentUser.uid],\n      createdAt: serverTimestamp(),\n      createdBy: currentUser.uid\n    };\n\n    // Add group to Firestore\n    const groupRef = collection(firestore, 'groups');\n    await addDoc(groupRef, groupData);\n    setGroups([...groups, groupData]); // Update the group list\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(GroupList, {\n      groups: groups,\n      setSelectedGroup: setSelectedGroup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), selectedGroup ? /*#__PURE__*/_jsxDEV(GroupChat, {\n      groupId: selectedGroup.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"no-group-message\",\n      children: \"Select a group to start chatting!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-group-btn\",\n      onClick: () => setShowGroupModal(true),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), showGroupModal && /*#__PURE__*/_jsxDEV(GroupCreation, {\n      friends: [] // Pass friends list here\n      ,\n      createGroup: createGroup,\n      closeModal: () => setShowGroupModal(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_s(Group, \"ndxrlm7ABalt9gx2gpo5pH9ptqU=\");\n_c = Group;\nexport default Group;\nvar _c;\n$RefreshReg$(_c, \"Group\");","map":{"version":3,"names":["React","useState","useEffect","collection","query","where","getDocs","addDoc","serverTimestamp","firestore","auth","jsxDEV","_jsxDEV","Group","_s","groups","setGroups","selectedGroup","setSelectedGroup","showGroupModal","setShowGroupModal","fetchGroups","currentUser","groupRef","groupQuery","uid","groupSnapshot","userGroups","docs","map","doc","id","data","createGroup","groupName","selectedFriends","groupData","groupMembers","createdAt","createdBy","className","children","GroupList","fileName","_jsxFileName","lineNumber","columnNumber","GroupChat","groupId","onClick","GroupCreation","friends","closeModal","_c","$RefreshReg$"],"sources":["C:/Users/Jay/Desktop/JAY/ss/fusionall/src/components/group.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { collection, query, where, getDocs, addDoc, serverTimestamp } from 'firebase/firestore'; // Firebase v9 functions\r\nimport { firestore, auth } from './firebase'; // Your Firebase utilities\r\n\r\nfunction Group() {\r\n    const [groups, setGroups] = useState([]);\r\n    const [selectedGroup, setSelectedGroup] = useState(null);\r\n    const [showGroupModal, setShowGroupModal] = useState(false);\r\n\r\n    // Fetch the user's groups from Firestore\r\n    useEffect(() => {\r\n        const fetchGroups = async () => {\r\n            const currentUser = auth.currentUser;\r\n            const groupRef = collection(firestore, 'groups');\r\n            const groupQuery = query(groupRef, where('groupMembers', 'array-contains', currentUser.uid));\r\n            const groupSnapshot = await getDocs(groupQuery);\r\n            const userGroups = groupSnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n            setGroups(userGroups);\r\n        };\r\n\r\n        fetchGroups();\r\n    }, []);\r\n\r\n    // Function to handle group creation\r\n    const createGroup = async (groupName, selectedFriends) => {\r\n        const currentUser = auth.currentUser;\r\n        const groupData = {\r\n            groupName,\r\n            groupMembers: [...selectedFriends, currentUser.uid],\r\n            createdAt: serverTimestamp(),\r\n            createdBy: currentUser.uid\r\n        };\r\n\r\n        // Add group to Firestore\r\n        const groupRef = collection(firestore, 'groups');\r\n        await addDoc(groupRef, groupData);\r\n        setGroups([...groups, groupData]); // Update the group list\r\n    };\r\n\r\n    return (\r\n        <div className=\"main-page-container\">\r\n            {/* Display list of groups */}\r\n            <GroupList groups={groups} setSelectedGroup={setSelectedGroup} />\r\n\r\n            {/* Display group chat if a group is selected */}\r\n            {selectedGroup ? (\r\n                <GroupChat groupId={selectedGroup.id} />\r\n            ) : (\r\n                <p className=\"no-group-message\">Select a group to start chatting!</p>\r\n            )}\r\n\r\n            {/* Plus symbol for opening the group creation modal */}\r\n            <button className=\"add-group-btn\" onClick={() => setShowGroupModal(true)}>\r\n                +\r\n            </button>\r\n\r\n            {/* Group creation modal */}\r\n            {showGroupModal && (\r\n                <GroupCreation\r\n                    friends={[]} // Pass friends list here\r\n                    createGroup={createGroup}\r\n                    closeModal={() => setShowGroupModal(false)}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Group;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}