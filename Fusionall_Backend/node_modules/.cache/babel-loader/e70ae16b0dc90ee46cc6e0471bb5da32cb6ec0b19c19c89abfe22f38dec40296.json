{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jay\\\\Desktop\\\\JAY\\\\ss\\\\fusionall\\\\src\\\\components\\\\FriendRequests.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { doc, updateDoc, arrayUnion, arrayRemove, getDoc } from 'firebase/firestore';\nimport { firestore, auth } from './firebase';\nimport \"FriendRequests.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FriendRequests() {\n  _s();\n  const [requests, setRequests] = useState([]);\n  const currentUser = auth.currentUser;\n  useEffect(() => {\n    const fetchRequests = async () => {\n      if (currentUser) {\n        const userDocRef = doc(firestore, 'users', currentUser.uid);\n        const userSnapshot = await getDoc(userDocRef);\n        if (userSnapshot.exists()) {\n          const userData = userSnapshot.data();\n          if (userData && userData.friendRequestsReceived) {\n            // Fetch usernames for each UID\n            const friendRequestsWithNames = await Promise.all(userData.friendRequestsReceived.map(async friendUid => {\n              const friendDocRef = doc(firestore, 'users', friendUid);\n              const friendSnapshot = await getDoc(friendDocRef);\n              if (friendSnapshot.exists()) {\n                const friendData = friendSnapshot.data();\n                return {\n                  uid: friendUid,\n                  username: friendData.username\n                }; // Assuming 'username' is a field in the 'users' collection\n              }\n              return {\n                uid: friendUid,\n                username: 'Unknown'\n              };\n            }));\n            setRequests(friendRequestsWithNames);\n          }\n        } else {\n          console.log('No such document!');\n        }\n      }\n    };\n    fetchRequests();\n  }, [currentUser]);\n  const acceptRequest = async friendUid => {\n    const userRef = doc(firestore, 'users', currentUser.uid);\n    const friendRef = doc(firestore, 'users', friendUid);\n\n    // Update current user to add friend and remove the request\n    await updateDoc(userRef, {\n      friends: arrayUnion(friendUid),\n      friendRequestsReceived: arrayRemove(friendUid)\n    });\n\n    // Update friend to add you as a friend\n    await updateDoc(friendRef, {\n      friends: arrayUnion(currentUser.uid),\n      friendRequestsSent: arrayRemove(currentUser.uid)\n    });\n\n    // Optionally, remove the request from the state\n    setRequests(prevRequests => prevRequests.filter(request => request.uid !== friendUid));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Friend Requests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), requests.length > 0 ? requests.map(request => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"friend-request\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: request.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => acceptRequest(request.uid),\n        children: \"Accept\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }, this)]\n    }, request.uid, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No friend requests.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n_s(FriendRequests, \"MIcAFnHRaJFubpcUtYXSDqOxSqY=\");\n_c = FriendRequests;\nexport default FriendRequests;\nvar _c;\n$RefreshReg$(_c, \"FriendRequests\");","map":{"version":3,"names":["React","useEffect","useState","doc","updateDoc","arrayUnion","arrayRemove","getDoc","firestore","auth","jsxDEV","_jsxDEV","FriendRequests","_s","requests","setRequests","currentUser","fetchRequests","userDocRef","uid","userSnapshot","exists","userData","data","friendRequestsReceived","friendRequestsWithNames","Promise","all","map","friendUid","friendDocRef","friendSnapshot","friendData","username","console","log","acceptRequest","userRef","friendRef","friends","friendRequestsSent","prevRequests","filter","request","children","fileName","_jsxFileName","lineNumber","columnNumber","length","className","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Jay/Desktop/JAY/ss/fusionall/src/components/FriendRequests.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { doc, updateDoc, arrayUnion, arrayRemove, getDoc } from 'firebase/firestore';\r\nimport { firestore, auth } from './firebase';\r\nimport \"FriendRequests.css\";\r\n\r\nfunction FriendRequests() {\r\n    const [requests, setRequests] = useState([]);\r\n    const currentUser = auth.currentUser;\r\n\r\n    useEffect(() => {\r\n        const fetchRequests = async () => {\r\n            if (currentUser) {\r\n                const userDocRef = doc(firestore, 'users', currentUser.uid);\r\n                const userSnapshot = await getDoc(userDocRef);\r\n\r\n                if (userSnapshot.exists()) {\r\n                    const userData = userSnapshot.data();\r\n                    if (userData && userData.friendRequestsReceived) {\r\n                        // Fetch usernames for each UID\r\n                        const friendRequestsWithNames = await Promise.all(\r\n                            userData.friendRequestsReceived.map(async (friendUid) => {\r\n                                const friendDocRef = doc(firestore, 'users', friendUid);\r\n                                const friendSnapshot = await getDoc(friendDocRef);\r\n                                if (friendSnapshot.exists()) {\r\n                                    const friendData = friendSnapshot.data();\r\n                                    return { uid: friendUid, username: friendData.username }; // Assuming 'username' is a field in the 'users' collection\r\n                                }\r\n                                return { uid: friendUid, username: 'Unknown' };\r\n                            })\r\n                        );\r\n                        setRequests(friendRequestsWithNames);\r\n                    }\r\n                } else {\r\n                    console.log('No such document!');\r\n                }\r\n            }\r\n        };\r\n\r\n        fetchRequests();\r\n    }, [currentUser]);\r\n\r\n    const acceptRequest = async (friendUid) => {\r\n        const userRef = doc(firestore, 'users', currentUser.uid);\r\n        const friendRef = doc(firestore, 'users', friendUid);\r\n\r\n        // Update current user to add friend and remove the request\r\n        await updateDoc(userRef, {\r\n            friends: arrayUnion(friendUid),\r\n            friendRequestsReceived: arrayRemove(friendUid),\r\n        });\r\n\r\n        // Update friend to add you as a friend\r\n        await updateDoc(friendRef, {\r\n            friends: arrayUnion(currentUser.uid),\r\n            friendRequestsSent: arrayRemove(currentUser.uid),\r\n        });\r\n\r\n        // Optionally, remove the request from the state\r\n        setRequests((prevRequests) => prevRequests.filter((request) => request.uid !== friendUid));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h3>Friend Requests</h3>\r\n            {requests.length > 0 ? (\r\n                requests.map((request) => (\r\n                    <div key={request.uid} className=\"friend-request\">\r\n                        <span>{request.username}</span> {/* Display username instead of UID */}\r\n                        <button onClick={() => acceptRequest(request.uid)}>Accept</button>\r\n                    </div>\r\n                ))\r\n            ) : (\r\n                <p>No friend requests.</p>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FriendRequests;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}