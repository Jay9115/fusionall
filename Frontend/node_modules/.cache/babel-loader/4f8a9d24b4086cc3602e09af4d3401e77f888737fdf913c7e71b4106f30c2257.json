{"ast":null,"code":"var _jsxFileName = \"D:\\\\SGP\\\\fusionall\\\\src\\\\components\\\\GroupChat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { auth } from './firebase';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction GroupChat({\n  groupId\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [messageInput, setMessageInput] = useState('');\n  const dummy = useRef();\n  useEffect(() => {\n    const fetchMessages = async () => {\n      const res = await fetch(`http://localhost:5000/api/groups/${groupId}/messages`);\n      if (res.ok) {\n        setMessages(await res.json());\n      }\n    };\n    fetchMessages();\n    // Optionally, set up polling or websockets for real-time updates\n  }, [groupId]);\n  const sendMessage = async e => {\n    e.preventDefault();\n    const {\n      uid,\n      photoURL\n    } = auth.currentUser;\n    const response = await fetch(`http://localhost:5000/api/groups/${groupId}/messages`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        text: messageInput,\n        sender: uid,\n        photoURL\n      })\n    });\n    if (response.ok) {\n      setMessageInput('');\n      // Re-fetch messages\n      const res = await fetch(`http://localhost:5000/api/groups/${groupId}/messages`);\n      if (res.ok) setMessages(await res.json());\n    }\n    if (dummy.current) dummy.current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-container\",\n      children: [messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: msg.sender === auth.currentUser.uid ? 'sent' : 'received',\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: msg.photoURL || 'https://api.adorable.io/avatars/23/abott@adorable.png',\n          alt: \"Avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"span\", {\n        ref: dummy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: messageInput,\n        onChange: e => setMessageInput(e.target.value),\n        placeholder: \"Type your message here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(GroupChat, \"T1Zp3UmNwYqeupfxUekQSSwLvK4=\");\n_c = GroupChat;\nexport default GroupChat;\nvar _c;\n$RefreshReg$(_c, \"GroupChat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","auth","jsxDEV","_jsxDEV","Fragment","_Fragment","GroupChat","groupId","_s","messages","setMessages","messageInput","setMessageInput","dummy","fetchMessages","res","fetch","ok","json","sendMessage","e","preventDefault","uid","photoURL","currentUser","response","method","headers","body","JSON","stringify","text","sender","current","scrollIntoView","behavior","children","className","map","msg","idx","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","ref","onSubmit","value","onChange","target","placeholder","type","_c","$RefreshReg$"],"sources":["D:/SGP/fusionall/src/components/GroupChat.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { auth } from './firebase';\r\n\r\nfunction GroupChat({ groupId }) {\r\n    const [messages, setMessages] = useState([]);\r\n    const [messageInput, setMessageInput] = useState('');\r\n    const dummy = useRef();\r\n\r\n    useEffect(() => {\r\n        const fetchMessages = async () => {\r\n            const res = await fetch(`http://localhost:5000/api/groups/${groupId}/messages`);\r\n            if (res.ok) {\r\n                setMessages(await res.json());\r\n            }\r\n        };\r\n        fetchMessages();\r\n        // Optionally, set up polling or websockets for real-time updates\r\n    }, [groupId]);\r\n\r\n    const sendMessage = async (e) => {\r\n        e.preventDefault();\r\n        const { uid, photoURL } = auth.currentUser;\r\n        const response = await fetch(`http://localhost:5000/api/groups/${groupId}/messages`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                text: messageInput,\r\n                sender: uid,\r\n                photoURL\r\n            })\r\n        });\r\n        if (response.ok) {\r\n            setMessageInput('');\r\n            // Re-fetch messages\r\n            const res = await fetch(`http://localhost:5000/api/groups/${groupId}/messages`);\r\n            if (res.ok) setMessages(await res.json());\r\n        }\r\n        if (dummy.current) dummy.current.scrollIntoView({ behavior: 'smooth' });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"message-container\">\r\n                {messages.map((msg, idx) => (\r\n                    <div key={idx} className={msg.sender === auth.currentUser.uid ? 'sent' : 'received'}>\r\n                        <img src={msg.photoURL || 'https://api.adorable.io/avatars/23/abott@adorable.png'} alt=\"Avatar\" />\r\n                        <p>{msg.text}</p>\r\n                    </div>\r\n                ))}\r\n                <span ref={dummy}></span>\r\n            </div>\r\n            <form onSubmit={sendMessage}>\r\n                <input\r\n                    value={messageInput}\r\n                    onChange={(e) => setMessageInput(e.target.value)}\r\n                    placeholder=\"Type your message here...\"\r\n                />\r\n                <button type=\"submit\">Send</button>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GroupChat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}