{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jay\\\\Desktop\\\\JAY\\\\ss\\\\fusionall\\\\src\\\\components\\\\Materials.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getStorage, ref, uploadBytesResumable, getDownloadURL, listAll } from 'firebase/storage';\nimport { getAuth } from 'firebase/auth';\nimport { getFirestore, doc, getDoc } from 'firebase/firestore';\nimport GroupList from './GroupList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Materials = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [url, setUrl] = useState('');\n  const [groups, setGroups] = useState([]);\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [fileUrls, setFileUrls] = useState([]);\n  useEffect(() => {\n    const fetchGroups = async () => {\n      const auth = getAuth();\n      const firestore = getFirestore();\n      const userDoc = await getDoc(doc(firestore, 'users', auth.currentUser.uid));\n      const userGroups = userDoc.data().groups || [];\n      setGroups(userGroups);\n    };\n    fetchGroups();\n  }, []);\n  const handleFileChange = e => {\n    if (e.target.files[0]) {\n      setFile(e.target.files[0]);\n    }\n  };\n  const handleUpload = () => {\n    if (!selectedGroup || !file) return;\n    const storage = getStorage();\n    const auth = getAuth();\n    const storageRef = ref(storage, `groups/${selectedGroup.id}/files/${auth.currentUser.uid}_${file.name}`);\n    const uploadTask = uploadBytesResumable(storageRef, file);\n    uploadTask.on('state_changed', snapshot => {\n      const progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n      setProgress(progress);\n    }, error => {\n      console.error(error);\n    }, () => {\n      getDownloadURL(uploadTask.snapshot.ref).then(downloadURL => {\n        setUrl(downloadURL);\n        fetchFiles(selectedGroup); // Fetch updated files list after upload\n      });\n    });\n  };\n  const fetchFiles = async group => {\n    if (!group) return;\n    const storage = getStorage();\n    const groupFilesRef = ref(storage, `groups/${group.id}/files`);\n    listAll(groupFilesRef).then(res => {\n      const filePromises = res.items.map(itemRef => getDownloadURL(itemRef));\n      return Promise.all(filePromises);\n    }).then(urls => setFileUrls(urls)).catch(error => console.error('Error fetching files:', error));\n  };\n  useEffect(() => {\n    if (selectedGroup) {\n      fetchFiles(selectedGroup);\n    }\n  }, [selectedGroup]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(GroupList, {\n      groups: groups,\n      setSelectedGroup: setSelectedGroup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), selectedGroup && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Files for Group: \", selectedGroup.groupName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Progress: \", progress, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), url && /*#__PURE__*/_jsxDEV(\"a\", {\n        href: url,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Download Last Uploaded File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Previous Files:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: fileUrls.map((fileUrl, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: fileUrl,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: [\"File \", index + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(Materials, \"veTTeO4ObPT0kqN/sfwFxm1qCUI=\");\n_c = Materials;\nexport default Materials;\nvar _c;\n$RefreshReg$(_c, \"Materials\");","map":{"version":3,"names":["React","useState","useEffect","getStorage","ref","uploadBytesResumable","getDownloadURL","listAll","getAuth","getFirestore","doc","getDoc","GroupList","jsxDEV","_jsxDEV","Materials","_s","file","setFile","progress","setProgress","url","setUrl","groups","setGroups","selectedGroup","setSelectedGroup","fileUrls","setFileUrls","fetchGroups","auth","firestore","userDoc","currentUser","uid","userGroups","data","handleFileChange","e","target","files","handleUpload","storage","storageRef","id","name","uploadTask","on","snapshot","bytesTransferred","totalBytes","error","console","then","downloadURL","fetchFiles","group","groupFilesRef","res","filePromises","items","map","itemRef","Promise","all","urls","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","groupName","type","onChange","onClick","href","rel","fileUrl","index","_c","$RefreshReg$"],"sources":["C:/Users/Jay/Desktop/JAY/ss/fusionall/src/components/Materials.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getStorage, ref, uploadBytesResumable, getDownloadURL, listAll } from 'firebase/storage';\r\nimport { getAuth } from 'firebase/auth';\r\nimport { getFirestore, doc, getDoc } from 'firebase/firestore';\r\nimport GroupList from './GroupList';\r\n\r\nconst Materials = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [progress, setProgress] = useState(0);\r\n  const [url, setUrl] = useState('');\r\n  const [groups, setGroups] = useState([]);\r\n  const [selectedGroup, setSelectedGroup] = useState(null);\r\n  const [fileUrls, setFileUrls] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchGroups = async () => {\r\n      const auth = getAuth();\r\n      const firestore = getFirestore();\r\n      const userDoc = await getDoc(doc(firestore, 'users', auth.currentUser.uid));\r\n      const userGroups = userDoc.data().groups || [];\r\n      setGroups(userGroups);\r\n    };\r\n    \r\n    fetchGroups();\r\n  }, []);\r\n\r\n  const handleFileChange = (e) => {\r\n    if (e.target.files[0]) {\r\n      setFile(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const handleUpload = () => {\r\n    if (!selectedGroup || !file) return;\r\n    \r\n    const storage = getStorage();\r\n    const auth = getAuth();\r\n    const storageRef = ref(storage, `groups/${selectedGroup.id}/files/${auth.currentUser.uid}_${file.name}`);\r\n    const uploadTask = uploadBytesResumable(storageRef, file);\r\n\r\n    uploadTask.on(\r\n      'state_changed',\r\n      (snapshot) => {\r\n        const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n        setProgress(progress);\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n      },\r\n      () => {\r\n        getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\r\n          setUrl(downloadURL);\r\n          fetchFiles(selectedGroup); // Fetch updated files list after upload\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  const fetchFiles = async (group) => {\r\n    if (!group) return;\r\n\r\n    const storage = getStorage();\r\n    const groupFilesRef = ref(storage, `groups/${group.id}/files`);\r\n    \r\n    listAll(groupFilesRef)\r\n      .then((res) => {\r\n        const filePromises = res.items.map((itemRef) => getDownloadURL(itemRef));\r\n        return Promise.all(filePromises);\r\n      })\r\n      .then((urls) => setFileUrls(urls))\r\n      .catch((error) => console.error('Error fetching files:', error));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (selectedGroup) {\r\n      fetchFiles(selectedGroup);\r\n    }\r\n  }, [selectedGroup]);\r\n\r\n  return (\r\n    <div>\r\n      <GroupList groups={groups} setSelectedGroup={setSelectedGroup} />\r\n      {selectedGroup && (\r\n        <div>\r\n          <h4>Files for Group: {selectedGroup.groupName}</h4>\r\n          <input type=\"file\" onChange={handleFileChange} />\r\n          <button onClick={handleUpload}>Upload</button>\r\n          <p>Progress: {progress}%</p>\r\n          {url && <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">Download Last Uploaded File</a>}\r\n          \r\n          <h5>Previous Files:</h5>\r\n          <ul>\r\n            {fileUrls.map((fileUrl, index) => (\r\n              <li key={index}>\r\n                <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  File {index + 1}\r\n                </a>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Materials;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}