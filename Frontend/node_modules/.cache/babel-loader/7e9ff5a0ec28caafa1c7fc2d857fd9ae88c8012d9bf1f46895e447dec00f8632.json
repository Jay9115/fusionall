{"ast":null,"code":"var _jsxFileName = \"D:\\\\SGP\\\\fusionall\\\\src\\\\components\\\\Materials.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { auth } from './firebase';\nimport GroupList from './GroupList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Materials = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [groups, setGroups] = useState([]);\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [fileUrls, setFileUrls] = useState([]);\n\n  // Fetch the groups the user has joined\n  useEffect(() => {\n    const fetchGroups = async () => {\n      const currentUser = auth.currentUser;\n      if (!currentUser) {\n        console.error(\"User is not logged in.\");\n        return;\n      }\n      const res = await fetch(`http://localhost:5000/api/groups/user/${currentUser.uid}`);\n      if (res.ok) {\n        setGroups(await res.json());\n      }\n    };\n    fetchGroups();\n  }, []);\n\n  // Handle file selection\n  const handleFileChange = e => {\n    if (e.target.files[0]) {\n      setFile(e.target.files[0]);\n    }\n  };\n\n  // Handle file upload\n  const handleUpload = async () => {\n    if (!selectedGroup || !file) {\n      console.error(\"No group selected or no file chosen.\");\n      return;\n    }\n    const currentUser = auth.currentUser;\n    if (!currentUser) {\n      alert(\"Please log in to upload files.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('uploaderUid', currentUser.uid);\n    setProgress(0);\n    const xhr = new XMLHttpRequest();\n    xhr.open('POST', `http://localhost:5000/api/materials/upload/${selectedGroup.id}`, true);\n    xhr.upload.onprogress = event => {\n      if (event.lengthComputable) {\n        setProgress(event.loaded / event.total * 100);\n      }\n    };\n    xhr.onload = () => {\n      if (xhr.status === 201) {\n        setFile(null);\n        setProgress(0);\n        fetchFiles(selectedGroup);\n      } else {\n        alert('File upload failed.');\n        setProgress(0);\n      }\n    };\n    xhr.onerror = () => {\n      alert('File upload failed.');\n      setProgress(0);\n    };\n    xhr.send(formData);\n  };\n\n  // Fetch files for the selected group\n  const fetchFiles = async group => {\n    if (!group) return;\n    const res = await fetch(`http://localhost:5000/api/materials/list/${group.id}`);\n    if (res.ok) {\n      setFileUrls(await res.json());\n    }\n  };\n\n  // Fetch files whenever a new group is selected\n  useEffect(() => {\n    if (selectedGroup) {\n      fetchFiles(selectedGroup);\n    }\n  }, [selectedGroup]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(GroupList, {\n      groups: groups,\n      setSelectedGroup: setSelectedGroup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), selectedGroup && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Files for Group: \", selectedGroup.groupName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: `${progress}%`,\n          background: 'blue',\n          height: '5px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Previous Files:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"File Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Uploader\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Download Link\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: fileUrls.map((file, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: file.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: file.uploader\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: file.url,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                children: \"Download\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(Materials, \"77weZIYnAaeGXt8mR2HcLbJkRnQ=\");\n_c = Materials;\nexport default Materials;\nvar _c;\n$RefreshReg$(_c, \"Materials\");","map":{"version":3,"names":["React","useState","useEffect","auth","GroupList","jsxDEV","_jsxDEV","Materials","_s","file","setFile","progress","setProgress","groups","setGroups","selectedGroup","setSelectedGroup","fileUrls","setFileUrls","fetchGroups","currentUser","console","error","res","fetch","uid","ok","json","handleFileChange","e","target","files","handleUpload","alert","formData","FormData","append","xhr","XMLHttpRequest","open","id","upload","onprogress","event","lengthComputable","loaded","total","onload","status","fetchFiles","onerror","send","group","children","fileName","_jsxFileName","lineNumber","columnNumber","groupName","type","onChange","onClick","style","width","background","height","map","index","name","uploader","href","url","rel","_c","$RefreshReg$"],"sources":["D:/SGP/fusionall/src/components/Materials.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { auth } from './firebase';\r\nimport GroupList from './GroupList';\r\n\r\nconst Materials = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [progress, setProgress] = useState(0);\r\n  const [groups, setGroups] = useState([]);\r\n  const [selectedGroup, setSelectedGroup] = useState(null);\r\n  const [fileUrls, setFileUrls] = useState([]);\r\n\r\n  // Fetch the groups the user has joined\r\n  useEffect(() => {\r\n    const fetchGroups = async () => {\r\n      const currentUser = auth.currentUser;\r\n      if (!currentUser) {\r\n        console.error(\"User is not logged in.\");\r\n        return;\r\n      }\r\n      const res = await fetch(`http://localhost:5000/api/groups/user/${currentUser.uid}`);\r\n      if (res.ok) {\r\n        setGroups(await res.json());\r\n      }\r\n    };\r\n    fetchGroups();\r\n  }, []);\r\n\r\n  // Handle file selection\r\n  const handleFileChange = (e) => {\r\n    if (e.target.files[0]) {\r\n      setFile(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  // Handle file upload\r\n  const handleUpload = async () => {\r\n    if (!selectedGroup || !file) {\r\n      console.error(\"No group selected or no file chosen.\");\r\n      return;\r\n    }\r\n    const currentUser = auth.currentUser;\r\n    if (!currentUser) {\r\n      alert(\"Please log in to upload files.\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    formData.append('uploaderUid', currentUser.uid);\r\n\r\n    setProgress(0);\r\n\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.open('POST', `http://localhost:5000/api/materials/upload/${selectedGroup.id}`, true);\r\n\r\n    xhr.upload.onprogress = (event) => {\r\n      if (event.lengthComputable) {\r\n        setProgress((event.loaded / event.total) * 100);\r\n      }\r\n    };\r\n\r\n    xhr.onload = () => {\r\n      if (xhr.status === 201) {\r\n        setFile(null);\r\n        setProgress(0);\r\n        fetchFiles(selectedGroup);\r\n      } else {\r\n        alert('File upload failed.');\r\n        setProgress(0);\r\n      }\r\n    };\r\n\r\n    xhr.onerror = () => {\r\n      alert('File upload failed.');\r\n      setProgress(0);\r\n    };\r\n\r\n    xhr.send(formData);\r\n  };\r\n\r\n  // Fetch files for the selected group\r\n  const fetchFiles = async (group) => {\r\n    if (!group) return;\r\n    const res = await fetch(`http://localhost:5000/api/materials/list/${group.id}`);\r\n    if (res.ok) {\r\n      setFileUrls(await res.json());\r\n    }\r\n  };\r\n\r\n  // Fetch files whenever a new group is selected\r\n  useEffect(() => {\r\n    if (selectedGroup) {\r\n      fetchFiles(selectedGroup);\r\n    }\r\n  }, [selectedGroup]);\r\n\r\n  return (\r\n    <div>\r\n      {/* Group selection */}\r\n      <GroupList groups={groups} setSelectedGroup={setSelectedGroup} />\r\n\r\n      {/* File upload and list for selected group */}\r\n      {selectedGroup && (\r\n        <div>\r\n          <h4>Files for Group: {selectedGroup.groupName}</h4>\r\n          <input type=\"file\" onChange={handleFileChange} />\r\n          <button onClick={handleUpload}>Upload</button>\r\n          <div style={{ width: `${progress}%`, background: 'blue', height: '5px' }}></div>\r\n\r\n          <h5>Previous Files:</h5>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>File Name</th>\r\n                <th>Uploader</th>\r\n                <th>Download Link</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {fileUrls.map((file, index) => (\r\n                <tr key={index}>\r\n                  <td>{file.name}</td>\r\n                  <td>{file.uploader}</td>\r\n                  <td>\r\n                    <a href={file.url} target=\"_blank\" rel=\"noopener noreferrer\">Download</a>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Materials;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}