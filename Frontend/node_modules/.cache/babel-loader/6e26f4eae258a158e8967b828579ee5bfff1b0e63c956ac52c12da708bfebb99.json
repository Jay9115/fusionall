{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jay\\\\Desktop\\\\sss\\\\ss\\\\my-app\\\\src\\\\components\\\\LoginAndRegister.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './LoginAndRegister.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst express = require('express');\nconst mongoose = require('mongoose');\nconst bodyParser = require('body-parser');\nconst bcrypt = require('bcryptjs');\nconst app = express();\nconst LoginAndRegister = () => {\n  _s();\n  const [isLogin, setIsLogin] = useState(true);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const toggleForm = () => {\n    setIsLogin(!isLogin);\n    setEmail('');\n    setPassword('');\n    setConfirmPassword('');\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!isLogin && password !== confirmPassword) {\n      alert('Passwords do not match!');\n      return;\n    }\n    const url = isLogin ? '/api/login' : '/api/signup';\n    const payload = {\n      email,\n      password\n    };\n    app.use(bodyParser.json());\n\n    // Connect to MongoDB\n    mongoose.connect('mongodb://localhost:27017/userdb').then(() => console.log('Connected to MongoDB')).catch(err => console.error('Could not connect to MongoDB', err));\n\n    // User schema and model\n    const userSchema = new mongoose.Schema({\n      email: {\n        type: String,\n        required: true,\n        unique: true\n      },\n      password: {\n        type: String,\n        required: true\n      }\n    });\n    const User = mongoose.model('User', userSchema);\n    try {\n      app.post('/api/login', async (req, res) => {\n        const {\n          email,\n          password\n        } = req.body;\n        try {\n          // Check if user exists\n          let user = await User.findOne({\n            email\n          });\n          if (!user) {\n            return res.status(400).json({\n              message: 'Invalid email or password'\n            });\n          }\n\n          // Compare the provided password with the hashed password\n          const isMatch = await bcrypt.compare(password, user.password);\n          if (!isMatch) {\n            return res.status(400).json({\n              message: 'Invalid email or password'\n            });\n          }\n          res.status(200).json({\n            message: 'Login successful'\n          });\n        } catch (error) {\n          console.error(error.message);\n          res.status(500).send('Server error');\n        }\n      });\n      app.post('/api/signup', async (req, res) => {\n        const {\n          email,\n          password\n        } = req.body;\n        try {\n          // Check if user already exists\n          let user = await User.findOne({\n            email\n          });\n          if (user) {\n            return res.status(400).json({\n              message: 'User already exists'\n            });\n          }\n\n          // Hash the password\n          const salt = await bcrypt.genSalt(10);\n          const hashedPassword = await bcrypt.hash(password, salt);\n\n          // Create and save the user\n          user = new User({\n            email,\n            password: hashedPassword\n          });\n          await user.save();\n          res.status(200).json({\n            message: 'User registered successfully'\n          });\n        } catch (error) {\n          console.error(error.message);\n          res.status(500).send('Server error');\n        }\n      });\n    } catch (error) {\n      console.error('Network Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: isLogin ? 'Login' : 'Signup'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn-primary\",\n          children: isLogin ? 'Login' : 'Signup'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleForm,\n        className: \"btn-secondary\",\n        children: isLogin ? \"Don't have an account? Signup\" : 'Already have an account? Login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginAndRegister, \"Ofs0oYdYPI3NZF6GZuweB8hMsX8=\");\n_c = LoginAndRegister;\nexport default LoginAndRegister;\nvar _c;\n$RefreshReg$(_c, \"LoginAndRegister\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","express","require","mongoose","bodyParser","bcrypt","app","LoginAndRegister","_s","isLogin","setIsLogin","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","toggleForm","handleSubmit","e","preventDefault","alert","url","payload","use","json","connect","then","console","log","catch","err","error","userSchema","Schema","type","String","required","unique","User","model","post","req","res","body","user","findOne","status","message","isMatch","compare","send","salt","genSalt","hashedPassword","hash","save","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Jay/Desktop/sss/ss/my-app/src/components/LoginAndRegister.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './LoginAndRegister.css';\r\nimport axios from 'axios';\r\nconst express = require('express');\r\nconst mongoose = require('mongoose');\r\nconst bodyParser = require('body-parser');\r\nconst bcrypt = require('bcryptjs');\r\nconst app = express();\r\n\r\nconst LoginAndRegister = () => {\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n  const toggleForm = () => {\r\n    setIsLogin(!isLogin);\r\n    setEmail('');\r\n    setPassword('');\r\n    setConfirmPassword('');\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!isLogin && password !== confirmPassword) {\r\n      alert('Passwords do not match!');\r\n      return;\r\n    }\r\n  \r\n    const url = isLogin ? '/api/login' : '/api/signup';\r\n    const payload = {\r\n      email,\r\n      password,\r\n    };\r\n    app.use(bodyParser.json());\r\n\r\n    // Connect to MongoDB\r\n    mongoose.connect('mongodb://localhost:27017/userdb')\r\n      .then(() => console.log('Connected to MongoDB'))\r\n      .catch(err => console.error('Could not connect to MongoDB', err));\r\n    \r\n    // User schema and model\r\n    const userSchema = new mongoose.Schema({\r\n      email: { type: String, required: true, unique: true },\r\n      password: { type: String, required: true },\r\n    });\r\n    \r\n    const User = mongoose.model('User', userSchema);\r\n    \r\n    try {\r\n  app.post('/api/login', async (req, res) => {\r\n  const { email, password } = req.body;\r\n\r\n  try {\r\n    // Check if user exists\r\n    let user = await User.findOne({ email });\r\n    if (!user) {\r\n      return res.status(400).json({ message: 'Invalid email or password' });\r\n    }\r\n\r\n    // Compare the provided password with the hashed password\r\n    const isMatch = await bcrypt.compare(password, user.password);\r\n    if (!isMatch) {\r\n      return res.status(400).json({ message: 'Invalid email or password' });\r\n    }\r\n\r\n    res.status(200).json({ message: 'Login successful' });\r\n  } catch (error) {\r\n    console.error(error.message);\r\n    res.status(500).send('Server error');\r\n  }\r\n});\r\n\r\napp.post('/api/signup', async (req, res) => {\r\n  const { email, password } = req.body;\r\n\r\n  try {\r\n    // Check if user already exists\r\n    let user = await User.findOne({ email });\r\n    if (user) {\r\n      return res.status(400).json({ message: 'User already exists' });\r\n    }\r\n\r\n    // Hash the password\r\n    const salt = await bcrypt.genSalt(10);\r\n    const hashedPassword = await bcrypt.hash(password, salt);\r\n\r\n    // Create and save the user\r\n    user = new User({\r\n      email,\r\n      password: hashedPassword,\r\n    });\r\n\r\n    await user.save();\r\n    res.status(200).json({ message: 'User registered successfully' });\r\n  } catch (error) {\r\n    console.error(error.message);\r\n    res.status(500).send('Server error');\r\n  }\r\n});\r\n\r\n      \r\n    } catch (error) {\r\n      console.error('Network Error:', error);\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"form-container\">\r\n        <h2>{isLogin ? 'Login' : 'Signup'}</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label>Email</label>\r\n            <input\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Password</label>\r\n            <input\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          {!isLogin && (\r\n            <div className=\"form-group\">\r\n              <label>Confirm Password</label>\r\n              <input\r\n                type=\"password\"\r\n                value={confirmPassword}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n          )}\r\n          <button type=\"submit\" className=\"btn-primary\">\r\n            {isLogin ? 'Login' : 'Signup'}\r\n          </button>\r\n        </form>\r\n        <button onClick={toggleForm} className=\"btn-secondary\">\r\n          {isLogin\r\n            ? \"Don't have an account? Signup\"\r\n            : 'Already have an account? Login'}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginAndRegister\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}