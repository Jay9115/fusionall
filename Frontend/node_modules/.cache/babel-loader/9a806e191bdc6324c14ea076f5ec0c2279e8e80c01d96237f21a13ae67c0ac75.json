{"ast":null,"code":"var _jsxFileName = \"D:\\\\fusionall\\\\src\\\\components\\\\group.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport GroupList from './GroupList';\nimport GroupChat from './GroupChat';\nimport GroupCreation from './GroupCreation';\nimport { auth } from './firebase';\nimport './group.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Group() {\n  _s();\n  const [groups, setGroups] = useState([]);\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [showGroupModal, setShowGroupModal] = useState(false);\n\n  // Fetch the user's groups from backend\n  useEffect(() => {\n    const fetchGroups = async () => {\n      const currentUser = auth.currentUser;\n      if (currentUser) {\n        const res = await fetch(`http://localhost:5000/api/groups/user/${currentUser.uid}`);\n        if (res.ok) {\n          setGroups(await res.json());\n        }\n      }\n    };\n    fetchGroups();\n  }, []);\n\n  // Function to handle group creation\n  const createGroup = async (groupName, selectedFriends) => {\n    const currentUser = auth.currentUser;\n    if (!currentUser) return;\n    const groupData = {\n      groupName,\n      groupMembers: [...selectedFriends, currentUser.uid],\n      createdBy: currentUser.uid\n    };\n    const response = await fetch('http://localhost:5000/api/groups', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(groupData)\n    });\n    if (response.ok) {\n      const newGroup = await response.json();\n      setGroups([...groups, newGroup]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-page-container\",\n    children: [!selectedGroup && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(GroupList, {\n        groups: groups,\n        setSelectedGroup: setSelectedGroup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-group-btn\",\n        onClick: () => setShowGroupModal(true),\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), showGroupModal && /*#__PURE__*/_jsxDEV(GroupCreation, {\n        createGroup: createGroup,\n        closeModal: () => setShowGroupModal(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true), selectedGroup && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: () => setSelectedGroup(null),\n        children: \"\\u2190 Back to Groups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(GroupChat, {\n        groupId: selectedGroup.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s(Group, \"ndxrlm7ABalt9gx2gpo5pH9ptqU=\");\n_c = Group;\nexport default Group;\nvar _c;\n$RefreshReg$(_c, \"Group\");","map":{"version":3,"names":["React","useState","useEffect","GroupList","GroupChat","GroupCreation","auth","jsxDEV","_jsxDEV","Fragment","_Fragment","Group","_s","groups","setGroups","selectedGroup","setSelectedGroup","showGroupModal","setShowGroupModal","fetchGroups","currentUser","res","fetch","uid","ok","json","createGroup","groupName","selectedFriends","groupData","groupMembers","createdBy","response","method","headers","body","JSON","stringify","newGroup","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","closeModal","groupId","id","_c","$RefreshReg$"],"sources":["D:/fusionall/src/components/group.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport GroupList from './GroupList';\r\nimport GroupChat from './GroupChat';\r\nimport GroupCreation from './GroupCreation';\r\nimport { auth } from './firebase';\r\nimport './group.css';\r\n\r\nfunction Group() {\r\n    const [groups, setGroups] = useState([]);\r\n    const [selectedGroup, setSelectedGroup] = useState(null);\r\n    const [showGroupModal, setShowGroupModal] = useState(false);\r\n\r\n    // Fetch the user's groups from backend\r\n    useEffect(() => {\r\n        const fetchGroups = async () => {\r\n            const currentUser = auth.currentUser;\r\n            if (currentUser) {\r\n                const res = await fetch(`http://localhost:5000/api/groups/user/${currentUser.uid}`);\r\n                if (res.ok) {\r\n                    setGroups(await res.json());\r\n                }\r\n            }\r\n        };\r\n        fetchGroups();\r\n    }, []);\r\n\r\n    // Function to handle group creation\r\n    const createGroup = async (groupName, selectedFriends) => {\r\n        const currentUser = auth.currentUser;\r\n        if (!currentUser) return;\r\n        const groupData = {\r\n            groupName,\r\n            groupMembers: [...selectedFriends, currentUser.uid],\r\n            createdBy: currentUser.uid\r\n        };\r\n        const response = await fetch('http://localhost:5000/api/groups', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(groupData)\r\n        });\r\n        if (response.ok) {\r\n            const newGroup = await response.json();\r\n            setGroups([...groups, newGroup]);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"main-page-container\">\r\n            {!selectedGroup && (\r\n                <>\r\n                    <GroupList groups={groups} setSelectedGroup={setSelectedGroup} />\r\n                    <button className=\"add-group-btn\" onClick={() => setShowGroupModal(true)}>\r\n                        +\r\n                    </button>\r\n                    {showGroupModal && (\r\n                        <GroupCreation\r\n                            createGroup={createGroup}\r\n                            closeModal={() => setShowGroupModal(false)}\r\n                        />\r\n                    )}\r\n                </>\r\n            )}\r\n            {selectedGroup && (\r\n                <>\r\n                    <button className=\"back-button\" onClick={() => setSelectedGroup(null)}>\r\n                        ‚Üê Back to Groups\r\n                    </button>\r\n                    <GroupChat groupId={selectedGroup.id} />\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Group;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}